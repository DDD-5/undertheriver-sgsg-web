{
  "parser": "@typescript-eslint/parser",
  // Specifies the ESLint parser
  "extends": [
    "plugin:@typescript-eslint/recommended",
    // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "plugin:prettier/recommended"
    // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2018,
    // Allows for the parsing of modern ECMAScript features
    "sourceType": "module"
    // Allows for the use of imports
  },
  "globals": {
    "chrome": "readonly"
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "no-public",
        "overrides": {
          "accessors": "no-public",
          "methods": "no-public",
          "properties": "no-public",
          "parameterProperties": "explicit"
        }
      }
    ],
    "@typescript-eslint/no-object-literal-type-assertion": ["off"],
    "@typescript-eslint/no-parameter-properties": [
      "error",
      { "allows": ["protected", "public"] }
    ],
    "@typescript-eslint/camelcase": ["off"], // use eslint camelcase rule
    "@typescript-eslint/no-empty-function": ["off"], // use eslint no-empty-function rule
    "@typescript-eslint/no-use-before-define": ["off"], // use eslint no-use-before-define rule
    "@typescript-eslint/ban-ts-ignore": ["off"],
    "@typescript-eslint/explicit-module-boundary-types": ["off"],
    "@typescript-eslint/no-unused-vars": ["off"],
    "@typescript-eslint/no-explicit-any": ["off"]
  }
}
